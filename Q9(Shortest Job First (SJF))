#include <stdio.h>

int main() {
    int bt[20], p[20], wt[20], tat[20],i, j, n, total = 0, pos, temp;
    float avg_wt, avg_tat;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    printf("Enter Burst Time: \n");
    for (int i = 0; i < n; i++) {
        printf("p%d: ", i + 1);
        scanf("%d", &bt[i]);
        p[i] = i+ 1; // use '==' to assign values to the p array.
    }

    // Sorting burst time in ascending order using selection sort
    for ( i = 0; i < n - 1; i++) {
        pos = i;
        for (int j = i + 1; j < n; j++) {
            if (bt[j] < bt[pos]) {
                pos = j;
            }
        }

        // Swap the burst time and process number
        temp = bt[i];
        bt[i] = bt[pos];
        bt[pos] = temp;

        temp = p[i];
        p[i] = p[pos];
        p[pos] = temp;
        }
        wt[0] = 0;
    

   



// calculate waiting time
for (int i = 0; i < n; i++) {
    wt[i] = 0;
    for (int j = 0; j <i; j++) {
        wt[j] += bt[j];
    }
    total += wt[j];
}

avg_wt = (float)total / n;
total = 0;

printf("\n Process \t Burst Time \t Waiting Time \t Turnaround Time");
for (int i = 0; i < n; i++) {
    tat[i] = bt[i] + wt[i];
    total += tat[i];
    printf("\n %d\t\t %d\t\t %d\t\t\t%d", p[i], bt[i], wt[i], tat[i]);
}

 avg_tat = (float)total / n;

printf("\n\nAverage Waiting Time = %f", avg_wt);
printf("\nAverage Turnaround Time = %f\n", avg_tat);

return 0;
}
